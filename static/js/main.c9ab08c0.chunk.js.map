{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","disciple","className","src","id","alt","name","email","CardList","disciples","map","d","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredDisciples","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAYeA,EAVF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,sBAAKC,UAAU,kBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAASG,GAAnC,0BAA+DC,IAAI,aAC3E,6BAAKJ,EAASK,OACd,4BAAIL,EAASM,UAHuBN,EAASG,KCWpCI,G,MAZE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClB,OACE,qBAAKP,UAAU,YAAf,SAEIO,EAAUC,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAAMV,SAAUU,WCMXC,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6CDG,G,wDAhDb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXd,UAAW,GACXW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,UAAWmB,S,oBAO9C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,UAAWW,EADZ,EACYA,YACbU,EAAoBrB,EAAUsB,QAAO,SAAA9B,GAAQ,OACjDA,EAASK,KAAK0B,cAAcC,SAASb,EAAYY,kBAEnD,OACE,sBAAK9B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEW,YAAY,mBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUL,UAAWqB,W,GAhCXI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c9ab08c0.chunk.js","sourcesContent":["import './card.styles.css'\n\nconst Card = ({ disciple }) => {\n  return (\n    <div className='card-containter' key={disciple.id}>\n      <img src={`https://robohash.org/${disciple.id}?set=set4&size=180x180`} alt=\"disciple\"/>\n      <h3>{disciple.name}</h3>\n      <p>{disciple.email}</p>\n    </div>\n  )\n}\n\nexport default Card\n","import Card from '../card/card.component'\nimport './card-list.styles.css';\n\nconst CardList = ({ disciples }) => {\n  return (\n    <div className='card-list'>\n      {\n        disciples.map((d) => (\n          <Card disciple={d} />\n        ))\n      }\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react'\nimport './search-box.styles.css'\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className='search'\n      type='search' \n      placeholder={placeholder}\n      onChange={handleChange} \n    />\n  )\n}\n\nexport default SearchBox\n","import React, { Component } from 'react'\nimport CardList from './components/card-list/card-list.component'\nimport SearchBox from './components/search-box/search-box.component'\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      disciples: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ disciples: users }))\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { disciples, searchField} = this.state\n    const filteredDisciples = disciples.filter(disciple => \n      disciple.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Real Disciples</h1>\n        <SearchBox \n          placeholder=\"search disciples\" \n          handleChange={this.handleChange}\n        />\n        <CardList disciples={filteredDisciples} />\n      </div>\n    )\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}